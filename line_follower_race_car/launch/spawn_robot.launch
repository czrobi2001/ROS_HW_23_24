<?xml version="1.0"?>

<launch>

  <!-- RViz config file -->
  <arg name="rvizconfig" default="$(find line_follower_race_car)/rviz/mogi_world.rviz" />
  <arg name="model" default="$(find line_follower_race_car)/urdf/mogi_bot.xacro"/>

  <!-- Robot pose -->
  <!-- Inititalize it's position in the desired location inside the world -->
  <arg name="x" default="-0.45"/>
  <arg name="y" default="0.31"/>
  <arg name="z" default="0.1"/>
  <arg name="roll" default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw" default="1.027"/>

  <!-- Namespace -->
  <arg name="namespace" default="/line_follower_race_car" />

  <group ns="$(arg namespace)">

  <!-- Launch our Gazebo world -->
  <include file="$(find line_follower_race_car)/launch/world.launch"/>

  <!-- Find mogi_bot description and send urdf to param server -->
  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />

  <!-- Load ros_controllers configuration parameters -->
        <rosparam file="$(find line_follower_race_car)/config/ctrl_ackermann_steering_controller.yaml" command="load" ns="$(arg namespace)" /> 
        <rosparam file="$(find line_follower_race_car)/config/ctrl_gains.yaml" command="load" ns="$(arg namespace)" /> 
        <rosparam file="$(find line_follower_race_car)/config/ctrl_joint_state_publisher.yaml" command="load" ns="$(arg namespace)" />
        <rosparam file="$(find line_follower_race_car)/config/ctrl_steer_bot_hardware_gazebo.yaml" command="load" ns="$(arg namespace)" /> 

  <!-- Spawn the controllers -->
        <node pkg="controller_manager" type="spawner" name="controller_spawner" ns="$(arg namespace)"
            args="joint_state_publisher ackermann_steering_controller"
            output="screen" respawn="false" />

  <!-- Launch a rqt steering GUI for publishing to /steer_bot/steer_drive_controller/cmd_vel -->
        <node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering" >
            <param name="default_topic" value="$(arg namespace)/ackermann_steering_controller/cmd_vel"/>
        </node> 
  


  <!-- Send joint values-->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
  </node>

  <!-- Send robot states to tf -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>

  <!-- Spawn mogi_bot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
    args="-urdf -param robot_description -model mogi_bot 
            -x $(arg x) -y $(arg y) -z $(arg z)
            -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>

  <!-- Launch RViz -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />

  <!-- Launch trajectory server 
  <node pkg="hector_trajectory_server" type="hector_trajectory_server" respawn="false" name="hector_trajectory_server" output="screen">
    <param name="source_frame_name" value="base_footprint"/>
    <param name="target_frame_name" value="odom"/>
  </node> -->
  </group>

</launch>